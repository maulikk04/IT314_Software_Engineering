import java.util.Scanner;

class MatrixMultiplication {
    public static void main(String args[]) {
        int m, n, p, q;

        Scanner in = new Scanner(System.in);
        System.out.println("Enter the number of rows and columns of first matrix:");
        m = in.nextInt();
        n = in.nextInt();

        int first[][] = new int[m][n];

        System.out.println("Enter the elements of first matrix:");
        for (int c = 0; c < m; c++)
            for (int d = 0; d < n; d++)
                first[c][d] = in.nextInt();

        System.out.println("Enter the number of rows and columns of second matrix:");
        p = in.nextInt();
        q = in.nextInt();

        if (n != p) {
            System.out.println("Matrices with entered orders can't be multiplied with each other.");
        } else {
            int second[][] = new int[p][q];
            int multiply[][] = new int[m][q];

            System.out.println("Enter the elements of second matrix:");
            for (int c = 0; c < p; c++)
                for (int d = 0; d < q; d++)
                    second[c][d] = in.nextInt();

            // Performing multiplication
            for (int c = 0; c < m; c++) {
                for (int d = 0; d < q; d++) {
                    int sum = 0; // Reset sum at the start of the inner loop
                    for (int k = 0; k < n; k++) { // Use n instead of p
                        sum += first[c][k] * second[k][d]; // Correct indexing
                    }
                    multiply[c][d] = sum;
                }
            }

            System.out.println("Product of entered matrices:");
            for (int c = 0; c < m; c++) {
                for (int d = 0; d < q; d++)
                    System.out.print(multiply[c][d] + "\t");
                System.out.print("\n");
            }
        }
        in.close(); // Close the scanner
    }
}
