class StackMethods {
    private int top;
    int size;
    int[] stack;

    public StackMethods(int arraySize) {
        size = arraySize;
        stack = new int[size];
        top = -1; // Initialize top to -1 indicating stack is empty
    }

    public void push(int value) {
        if (top == size - 1) {
            System.out.println("Stack is full, can't push a value");
        } else {
            top++; // Increment top to point to the next empty position
            stack[top] = value; // Assign the value to the stack
        }
    }

    public void pop() {
        if (!isEmpty()) {
            System.out.println("Popped: " + stack[top]); // Print the popped value
            top--; // Decrease top to remove the value
        } else {
            System.out.println("Can't pop...stack is empty");
        }
    }

    public boolean isEmpty() {
        return top == -1; // Return true if top is -1
    }

    public void display() {
        if (isEmpty()) {
            System.out.println("Stack is empty.");
        } else {
            System.out.print("Stack contents: ");
            for (int i = 0; i <= top; i++) { // Use <= to iterate through valid stack elements
                System.out.print(stack[i] + " ");
            }
            System.out.println();
        }
    }
}

class StackReviseDemo {
    public static void main(String[] args) {
        StackMethods newStack = new StackMethods(5);
        newStack.push(10);
        newStack.push(1);
        newStack.push(50);
        newStack.push(20);
        newStack.push(90);

        newStack.display(); // Display the stack contents
        newStack.pop(); // Pop the top element
        newStack.pop(); // Pop the next top element
        newStack.pop(); // Pop another element
        newStack.pop(); // Pop the last element
        newStack.display(); // Display the stack contents after popping
    }
}

// Entry point of the program
public class Main {
    public static void main(String[] args) {
        StackReviseDemo.main(args); // Call the stack demo
    }
}
